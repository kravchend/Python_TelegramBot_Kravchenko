from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types
from calendarapp.models import User, Appointment
from asgiref.sync import sync_to_async


def main_keyboard():
    keyboard = [
        [
            types.KeyboardButton(text="üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å"),
            types.KeyboardButton(text="üîé –°—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π"),
        ],
        [
            types.KeyboardButton(text="üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ"),
            types.KeyboardButton(text="üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π"),
        ],
        [
            types.KeyboardButton(text="üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"),
            types.KeyboardButton(text="üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä—å: —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"),
        ],
        [
            types.KeyboardButton(text="üåç –û–±—â–∏–µ —Å–æ–±—ã—Ç–∏—è"),
            types.KeyboardButton(text="‚¨áÔ∏è –í—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–∏ —Å–æ–±—ã—Ç–∏—è"),
        ],
    ]
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä is_persistent=True, —á—Ç–æ–±—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–π
    return types.ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True, is_persistent=True)


def get_invite_keyboard(event_id):
    return InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å", callback_data=f"invite_event_{event_id}")
        ]]
    )


def get_users_invite_keyboard(event_id, users):
    inline_keyboard = []
    for i in range(0, len(users), 2):
        row = []
        for j in range(2):
            if i + j < len(users):
                user = users[i + j]
                label = user.username if user.username else f"ID {user.telegram_id}"
                row.append(
                    InlineKeyboardButton(
                        text=label,
                        callback_data=f"invite_{event_id}_{user.telegram_id}",
                    )
                )
        inline_keyboard.append(row)
    inline_keyboard.append([InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="invite_done")])

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


async def get_invitable_users(event_id, exclude_user_id):
    def query():
        already_invited = Appointment.objects.filter(
            event_id=event_id,
            status__in=["pending", "confirmed"]
        ).values_list("invitee__telegram_id", flat=True)

        return User.objects.filter(telegram_id__isnull=False).exclude(
            telegram_id=exclude_user_id
        ).exclude(
            telegram_id__in=already_invited
        )

    return list(await sync_to_async(lambda: list(query()))())


def event_public_action_keyboard(event_id, is_public):
    if is_public:
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîí –°–¥–µ–ª–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º", callback_data=f"event_private_{event_id}")]
        ])
    else:
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üåê –°–¥–µ–ª–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º", callback_data=f"event_public_{event_id}")]
        ])


def appointment_action_keyboard(appointment_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"appt_confirm_{appointment_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"appt_cancel_{appointment_id}")]
    ])
