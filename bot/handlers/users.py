from aiogram import Router, types
from asgiref.sync import sync_to_async
from calendarapp.models import User
from bot.calendar_instance import calendar
from bot.handlers.keyboards import main_keyboard
from aiogram.filters import Command
import logging

import random
import string

router = Router()
logger = logging.getLogger(__name__)


async def get_bot():
    from bot.loader import bot
    return bot


@router.message(Command("start"))
@router.message(Command("register"))
async def send_welcome(message: types.Message):
    telegram_id = message.from_user.id
    username = message.from_user.username or f"User_{telegram_id}"
    password = ''.join(random.choices(string.ascii_letters + string.digits, k=12))

    try:
        user, created = await sync_to_async(User.objects.get_or_create)(
            telegram_id=telegram_id,
            defaults={
                'username': username,
                'email': f"{username}@telegram.bot",
                'is_active': True
            }
        )

        if created:
            user.set_password(password)
            await sync_to_async(user.save)()
            await message.answer(
                f"     ‚ú®    ‚ú®    ‚ú®    ‚ú®    ‚ú®    ‚ú®    ‚ú®    ‚ú®     \n\n"

                f"  ü§ù  {username}, \n –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n\n"

                f"  üöÄ  –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç:\n\n"

                f"  üë§  Username: `{username}`\n"
                f"  üîê  Password: `{password}`\n\n"

                f"  üîó  http://127.0.0.1:8000/login/\n\n"

                f"‚ö†Ô∏è üí´  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫\n –∑–∞–ø–∏—Å—è–º –Ω–∞ –¥—Ä—É–≥–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö!",

                reply_markup=main_keyboard(),
                parse_mode="Markdown"
            )
        else:
            await message.answer(
                f"  ‚ú®üë§   {username}, \n –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                reply_markup=main_keyboard()
            )

    except Exception as e:
        logger.error(f" ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Telegram ID {telegram_id}): {e}")
        await message.answer(" ‚ö†Ô∏è ü§∑  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def get_user_id(message):
    telegram_id = message.from_user.id
    return await calendar.get_user_db_id(telegram_id)
